name: 'Terraform Infrasture Pipeline'

on:
  pull_request:
    branches: ['dev']
  push:
    branches: [ 'dev', 'main' ]


permissions:
  contents: read
jobs:
  approve:
    runs-on: ubuntu-latest
    steps:
    - name: Approve
      run: echo "All PRS need to be approved before starting automated CI"
  github:
    name: 'Github Actions Setup'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Branch check to determine environment 
      id: branch_check
      run: |
        echo "Running on branch ${{ github.ref }}"
        if ["${{ github.ref }}" = "refs/heads/main"]; then
          echo "::set-output name=env_name::Production"
        else
          echo "::set-output name=env_name::Preview"
        fi
    - name: Use variable setup in previous step
      run: echo "I'm using variable ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  terraform:
    name: 'Terraform'
    needs: [github]
    runs-on: ubuntu-latest
    environment: ${{ needs.github.outputs.env_name }}
    env:
      AWS_BUCKET_KEY: ${{secrets.AWS_BUCKET_KEY}}
      S3_BACKEND_BUCKET: ${{secrets.S3_BACKEND_BUCKET}}
      AWS_REGION: ${{secrets.AWS_REGION}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY_ID}}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
    - name: Terraform init, format and validate
      run: |
        echo "** Running Terraform Init **"
        echo pwd
        terraform init \
          -backend-config="bucket=afri-backend-state-bucket" \
          -backend-config="key=state-files" \
          -backend-config="region=us-east-1"
        echo "** Runing Terraform Format Check **"
        terraform fmt
        echo "** Running Terraform Validate **"
        terraform validate
      working-directory: './deployment'
    - name: Terraform Plan And Apply
      run: |
        echo "** Running Terraform Plan **"
        terraform plan -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{secrets.AWS_ACCESS_KEY_ID}}'
        
        echo "** Running Terraform Apply **"
        terraform apply -var 'aws_secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{secrets.AWS_ACCESS_KEY_ID}}' -auto-approve
      working-directory: './deployment' 
      

      ##wite test for signed url

      ## write test for deployed server
