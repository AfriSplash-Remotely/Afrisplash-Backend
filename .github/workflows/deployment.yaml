#  terraform init -backend-config ./backend.tfvars 
# name: 'Deploy-Backend'
# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   terraform:
#     name: 'Deploy-Backend'
#     runs-on: ubuntu-latest
#     permissions:
#       pull_request: write
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v2
#       with:
#       # terraform_version: 1.4.2
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#     - name: Terraform Format
#       id: fmt
#       run: terraform fmt -check

#     - name: Terraform Init
#       id: init
#       command: envsubst < backend.tfvars.template > backend.tfvars
#       run:  terraform init -backend-config ./backend.tfvars 
name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."